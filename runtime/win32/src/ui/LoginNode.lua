--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Sprite_4
local Sprite_4 = cc.Sprite:create("fightImgs/95.png")
Sprite_4:setName("Sprite_4")
Sprite_4:setTag(8)
Sprite_4:setCascadeColorEnabled(true)
Sprite_4:setCascadeOpacityEnabled(true)
Sprite_4:setPosition(0.0000, -139.9999)
layout = ccui.LayoutComponent:bindLayoutComponent(Sprite_4)
layout:setSize(cc.size(1551.0000, 2213.0000))
layout:setLeftMargin(-775.5000)
layout:setRightMargin(-775.5000)
layout:setTopMargin(-966.5001)
layout:setBottomMargin(-1246.5000)
Node:addChild(Sprite_4)

--Create allBg_1
local allBg_1 = cc.Sprite:create("loginImgs/loginBg.png")
allBg_1:setName("allBg_1")
allBg_1:setTag(5)
allBg_1:setCascadeColorEnabled(true)
allBg_1:setCascadeOpacityEnabled(true)
allBg_1:setOpacity(191)
layout = ccui.LayoutComponent:bindLayoutComponent(allBg_1)
layout:setSize(cc.size(750.0000, 1334.0000))
layout:setLeftMargin(-375.0000)
layout:setRightMargin(-375.0000)
layout:setTopMargin(-667.0000)
layout:setBottomMargin(-667.0000)
Node:addChild(allBg_1)

--Create Button_Login
local Button_Login = ccui.Button:create()
Button_Login:ignoreContentAdaptWithSize(false)
Button_Login:loadTextureNormal("loginImgs/loginBtn.png",0)
Button_Login:loadTexturePressed("loginImgs/loginBtn.png",0)
Button_Login:loadTextureDisabled("loginImgs/loginBtn.png",0)
Button_Login:setTitleFontSize(14)
Button_Login:setTitleColor(cc.c3b(65, 65, 70))
Button_Login:setLayoutComponentEnabled(true)
Button_Login:setName("Button_Login")
Button_Login:setTag(18)
Button_Login:setCascadeColorEnabled(true)
Button_Login:setCascadeOpacityEnabled(true)
Button_Login:setPosition(-6.5512, -179.2242)
layout = ccui.LayoutComponent:bindLayoutComponent(Button_Login)
layout:setSize(cc.size(261.0000, 73.0000))
layout:setLeftMargin(-137.0512)
layout:setRightMargin(-123.9488)
layout:setTopMargin(142.7242)
layout:setBottomMargin(-215.7242)
Node:addChild(Button_Login)

--Create Button_WeChat
local Button_WeChat = ccui.Button:create()
Button_WeChat:ignoreContentAdaptWithSize(false)
Button_WeChat:loadTextureNormal("loginImgs/weChatBtn.png",0)
Button_WeChat:loadTexturePressed("loginImgs/weChatBtn.png",0)
Button_WeChat:loadTextureDisabled("loginImgs/weChatBtn.png",0)
Button_WeChat:setTitleFontSize(14)
Button_WeChat:setTitleColor(cc.c3b(65, 65, 70))
Button_WeChat:setLayoutComponentEnabled(true)
Button_WeChat:setName("Button_WeChat")
Button_WeChat:setTag(149)
Button_WeChat:setCascadeColorEnabled(true)
Button_WeChat:setCascadeOpacityEnabled(true)
Button_WeChat:setPosition(-120.1149, -287.2301)
layout = ccui.LayoutComponent:bindLayoutComponent(Button_WeChat)
layout:setSize(cc.size(200.0000, 62.0000))
layout:setLeftMargin(-220.1149)
layout:setRightMargin(20.1149)
layout:setTopMargin(256.2301)
layout:setBottomMargin(-318.2301)
Node:addChild(Button_WeChat)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

